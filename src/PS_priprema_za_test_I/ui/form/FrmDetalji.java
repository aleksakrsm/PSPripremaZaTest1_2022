/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package PS_priprema_za_test_I.ui.form;

import PS_priprema_za_test_I.domain.Nastavnik;
import PS_priprema_za_test_I.domain.Zvanje;
import PS_priprema_za_test_I.repository.DatabaseRepository;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author aleks
 */
public class FrmDetalji extends javax.swing.JDialog {

    private Nastavnik nastavnik;
    private boolean omogucenaIzmena = false;
    private JTable tblTable;

    /**
     * Creates new form FrmAddNastavnik
     */
    public FrmDetalji(java.awt.Frame parent, boolean modal, Nastavnik nastavnik) {
        super(parent, modal);
        this.nastavnik = nastavnik;
//        tblTable = tblNastavnici;
        initComponents();
        prepareForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIme = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        lblPrezime = new javax.swing.JLabel();
        cmbZvanje = new javax.swing.JComboBox<>();
        lblPrezime1 = new javax.swing.JLabel();
        btnObrisi = new javax.swing.JButton();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnOmoguciIzmenu = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblIme.setText("Ime:");

        txtIme.setEditable(false);

        txtPrezime.setEditable(false);

        lblPrezime.setText("Prezime:");

        lblPrezime1.setText("Zvanje:");

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        lblID.setText("ID:");

        txtID.setEditable(false);

        btnOmoguciIzmenu.setText("Omoguci Izmenu");
        btnOmoguciIzmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOmoguciIzmenuActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIme, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPrezime1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmbZvanje, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPrezime, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                            .addComponent(btnOmoguciIzmenu))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIme)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrezime)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbZvanje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrezime1))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi)
                    .addComponent(btnOmoguciIzmenu)
                    .addComponent(btnSacuvaj))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
//        prvi nacin
//        new FrmPotvrdaZaBrisanjeNastavnika(null, true, nastavnik).setVisible(true);
//        dispose();

//      drugi nacin
        int odgovor = JOptionPane.showConfirmDialog(rootPane, "da li zelite da obrisete?", "Potvrdite", JOptionPane.OK_CANCEL_OPTION);
        if(odgovor == JOptionPane.OK_OPTION){            
            try {
                new DatabaseRepository().deleteNastavnik(nastavnik);
                System.out.println("obrisan!");
            } catch (SQLException ex) {
                Logger.getLogger(FrmPotvrdaZaBrisanjeNastavnika.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        dispose();
        

    }//GEN-LAST:event_btnObrisiActionPerformed
//private JButton btnSacuvaj;
    private void btnOmoguciIzmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOmoguciIzmenuActionPerformed
        omogucenaIzmena = true;
        txtID.setEditable(true);
        txtIme.setEditable(true);
        txtPrezime.setEditable(true);
        cmbZvanje.setEnabled(true);
//        btnSacuvaj = new JButton("Sacuvaj");
//        add(btnSacuvaj);
        btnSacuvaj.setVisible(true);

//        pack();
    }//GEN-LAST:event_btnOmoguciIzmenuActionPerformed
    private boolean doesContainDigit(String string) {
        char[] chars = string.toCharArray();
        for (char aChar : chars) {
            if (Character.isDigit(aChar)) {
                return true;
            }
        }
        return false;
    }

    private boolean isDigit(String string) {
        char[] chars = string.toCharArray();
        for (char aChar : chars) {
            if (!Character.isDigit(aChar)) {
                return false;
            }
        }
        return true;
    }
    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        Long oldId = nastavnik.getId();
        boolean signal = true;
        String ime = txtIme.getText().trim();
        String prezime = txtPrezime.getText().trim();
        String idStr = txtID.getText().trim();
        if (idStr.isEmpty() || !isDigit(idStr)) {
            signal = false;
        }

        if (ime.isEmpty() || doesContainDigit(ime)
                || prezime.isEmpty() || doesContainDigit(prezime) || ime.length() > 100 || prezime.length() > 100) {
            signal = false;
            System.out.println("greska pri unosu imen ili prezimena");
        }
        Object zvanjeObj = cmbZvanje.getSelectedItem();
        Zvanje zvanje;
        if (zvanjeObj == null) {
            zvanje = null;
            signal = false;
            System.out.println("obavezno je zvanje!!!");
        } else {
            zvanje = (Zvanje) zvanjeObj;
        }
        try {
            Nastavnik n;
            if (signal) {
                Long id = Long.parseLong(idStr);
                n = new Nastavnik(id, ime, prezime, zvanje);
                new DatabaseRepository().updateNastavnik(oldId, n);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmAddNastavnik.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnSacuvajActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOmoguciIzmenu;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<Object> cmbZvanje;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblIme;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JLabel lblPrezime1;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {
        btnSacuvaj.setVisible(false);
        txtID.setText(nastavnik.getId().intValue() + "");
        txtIme.setText(nastavnik.getIme());
        txtPrezime.setText(nastavnik.getPrezime());
//        cmbZvanje.addItem(nastavnik.getZvanje());
        cmbZvanje.setEnabled(false);
        List<Zvanje> zvanja = null;
        try {
            zvanja = new DatabaseRepository().getAllZvanja();
        } catch (SQLException ex) {
            Logger.getLogger(FrmAddNastavnik.class.getName()).log(Level.SEVERE, null, ex);
        }
        cmbZvanje.addItem(null);
        for (Zvanje zvanje : zvanja) {
            cmbZvanje.addItem(zvanje);
            if (zvanje.equals(nastavnik.getZvanje())) {
                cmbZvanje.setSelectedItem(zvanje);
            }
        }
    }
}
